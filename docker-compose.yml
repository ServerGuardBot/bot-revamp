version: '3.3'

services:
  server-guard:
    container_name: server_guard
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app
    ports:
      - "7777:7777"
    depends_on:
      - prometheus
      - grafana
      - surrealdb
      - valkey
    restart: always

  surrealdb:
    image: surrealdb/surrealdb:latest
    container_name: surrealdb
    ports:
      - "8000:8000"
    command:
      - start
      - --log=trace
      - --user=root
      - --pass=root
    restart: always
  
  valkey:
    image: valkey/valkey:7.2
    container_name: valkey
    command:
      - valkey-server
      - --save 60 1
      - --loglevel warning
    restart: always
  
  grafana:
    image: grafana/grafana:6.0.1
    container_name: grafana
    user: "0"
    environment:
      GF_LOG_LEVEL: error
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_PATHS_CONFIG: /etc/grafana/grafana.ini
    volumes:
      - ./config/grafana:/etc/grafana
      - ./config/dashboards:/tmp/dashboards
      - ./data/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: always
  
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.2.1
    user: root
    command:
      - --log.level=error
      - --storage.tsdb.path=/data/prometheus
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./config/pd.rules.yml:/etc/prometheus/pd.rules.yml:ro
      - ./config/tikv.rules.yml:/etc/prometheus/tikv.rules.yml:ro
      - ./config/tidb.rules.yml:/etc/prometheus/tidb.rules.yml:ro
      - ./data:/data
    restart: always